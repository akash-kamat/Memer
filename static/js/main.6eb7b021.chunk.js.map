{"version":3,"sources":["components/Nav.js","components/Meme.js","components/Memelist.js","components/Caption.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","id","Component","Meme","this","props","className","src","url","alt","name","onClick","memeclick","changeRoute","Memelist","Memedata","map","element","i","Caption","gen","document","getElementById","Generate","value","type","generatedImg","width","Back","Reset","App","page","setState","Route","captionId","parseInt","caption0","caption1","alert","fetch","state","then","response","json","imgc","Url","data","CaptionId","memedata","memes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6eb7b021.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Nav.css'\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"nav\">\r\n                Memer\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Meme.css'\r\n\r\nexport default class Meme extends Component {\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div id={this.props.id}>\r\n                <img className=\"memeimg\" src={this.props.url} alt={this.props.name} onClick={()=>{this.props.memeclick(this.props.url);this.props.changeRoute(this.props.id,'Caption')}} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Meme from './Meme'\r\nimport './Memelist.css'\r\n\r\nexport default class Memelist extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"memelist\">\r\n                {\r\n                    this.props.Memedata.map((element, i) => {\r\n                        return <Meme id={this.props.Memedata[i].id} name={this.props.Memedata[i].name} url={this.props.Memedata[i].url} key={i} changeRoute={this.props.changeRoute} memeclick={this.props.memeclick}/>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Caption.css'\r\n\r\nexport default class Caption extends Component {\r\n    gen = () => {\r\n        document.getElementById('imgdiv').className=\"imgd\";\r\n        this.props.Generate(document.getElementById(\"caption0\").value, document.getElementById(\"caption1\").value);\r\n        document.getElementById(\"mainimg\").className=\"imgdivafter\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"form\">\r\n                    <h1>Caption 1:</h1>\r\n                    <input type=\"text\" name=\"caption0\" className=\"inputs\" id=\"caption0\" />\r\n                    <h1>Caption 2:</h1>\r\n                    <input type=\"text\" name=\"caption1\" className=\"inputs\" id=\"caption1\" />\r\n                </div>\r\n                <input type=\"button\" value=\"generate\" id=\"generate\" onClick={this.gen}  />\r\n                <div id=\"imgdiv\" className=\"imgdiv\">\r\n                    <img id=\"mainimg\" src={this.props.generatedImg} alt=\"\" width=\"300px\"/>\r\n                </div>\r\n                <br />\r\n                <div className=\"botbtns\">\r\n                    <button id=\"backbtn\" className=\"btn1\" onClick={this.props.Back}>Go back</button>\r\n                    <button id=\"reset\" className=\"btn2\" onClick={this.props.Reset}>Reset</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Nav from './components/Nav.js'\nimport Memelist from './components/Memelist'\nimport Caption from './components/Caption'\nimport './App.css'\n\nexport default class App extends Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tMemedata: [],\n\t\t\tRoute: 'Home',\n\t\t\tcaptionId: '',\n\t\t\tUrl: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\n\t\tfetch(\"https://api.imgflip.com/get_memes\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(memedata => this.setState({ Memedata: memedata.data.memes }))\n\n\n\n\t}\n\n\tchangeRoute = (id, page) => {\n\t\tthis.setState({ Route: page })\n\t\tthis.setState({ captionId: parseInt(id) })\n\n\t}\n\n\tGenerate = (caption0, caption1) => {\n\t\tif (caption0==='' & caption1==='') {\n\t\t\talert(\"Enter atleast one caption\")\n\t\t}\n\t\telse{\n\t\t\tfetch(`https://api.imgflip.com/caption_image?template_id=${this.state.captionId}&username=akashkamat&password=1234567890Aa@&text0=${caption0}&text1=${caption1}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(imgc => this.setState({ Url: imgc.data.url }))\n\t\t}\n\t\t\n\t}\n\n\tReset = () => {\n\t\tdocument.getElementById(\"caption0\").value = '';\n\t\tdocument.getElementById(\"caption1\").value = '';\n\t\tthis.setState({ Url: '' })\n\t}\n\n\tBack = () => {\n        document.getElementById(\"caption0\").value = '';\n\t\tdocument.getElementById(\"caption1\").value = '';\n\t\tthis.changeRoute(null, 'Home')\n        this.setState({Url:''})\n        this.setState({CaptionId:''})\n\t}\n\tmemeclick = (url) => {\n\t\tthis.setState({Url:url})\n\t}\n\trender() {\n\t\tif (this.state.Route === 'Home') {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<Memelist Memedata={this.state.Memedata} changeRoute={this.changeRoute} memeclick={this.memeclick}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse if (this.state.Route === 'Caption') {\n\t\t\treturn (\n\t\t\t\t<Caption captionId={this.state.captionId} Generate={this.Generate} generatedImg={this.state.Url} changeRoute={this.changeRoute} Reset={this.Reset} Back={this.Back} />\n\t\t\t)\n\t\t}\n\t}\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}